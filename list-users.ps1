# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
param(
    [Parameter(Mandatory=$true)]
    [string]$Token
)

$headers = @{
    "Authorization" = "Bearer $Token"
    "Content-Type" = "application/json"
}

try {
    $response = Invoke-RestMethod -Uri "http://localhost:3000/api/admin/users" -Method GET -Headers $headers
    
    Write-Host "üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:" -ForegroundColor Green
    Write-Host "–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: $($response.total)" -ForegroundColor Cyan
    Write-Host ""
    
    foreach ($user in $response.users) {
        Write-Host "ID: $($user._id)" -ForegroundColor Yellow
        Write-Host "–ò–º—è: $($user.name)" -ForegroundColor White
        Write-Host "Email: $($user.email)" -ForegroundColor Gray
        Write-Host "–†–æ–ª—å: $($user.role)" -ForegroundColor Magenta
        Write-Host "–ë–∞–ª–∞–Ω—Å: $($user.balance)" -ForegroundColor Green
        Write-Host "–°–æ–∑–¥–∞–Ω: $($user.createdAt)" -ForegroundColor DarkGray
        Write-Host "----------------------------------------" -ForegroundColor DarkGray
    }
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:" -ForegroundColor Red
    Write-Host $_.Exception.Message -ForegroundColor Red
}

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
# .\list-users.ps1 -Token "YOUR_JWT_TOKEN_HERE"
